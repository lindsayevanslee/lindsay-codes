{
  "hash": "914748a937b9b22327e0ae6d89950794",
  "result": {
    "markdown": "---\ntitle: Webscraping screenshots with Selenium\ndescription: No more repetitive copy-pasting!\ndate: '2023-03-26'\nimage: 14-day-case-rate-per-100000-pop_2022-09-10.png\nimage-alt: 'Screenshot of a heatmap of Shelby County, TN 14-day COVID-19 case rate'\ncategories:\n  - webscraping\n  - python\n---\n\nMy team at work maintained a dashboard related to COVID-19 that included screenshots of graphs online that needed to be updated daily. I had recently taken a little [LinkedIn Learning course called Web Scraping with Python](https://www.linkedin.com/learning/web-scraping-with-python) and thought this could be a cool opportunity to try that out. The course doesn't really talk about webscraping screenshots, but it helped give me some of the foundational knowledge and vocabulary.\n\nAfter a lot of trial and error, here is an small script I came up with. This script cycles through a python dictionary of directions to specific locations, captures the screenshot, and saves it. One element of the dictionary contains the URL where the screenshot is, an XPATH direction to the location of the screenshot on the page, the frame number, and the name of the file that it should be saved to. The [XPATH](https://developer.mozilla.org/en-US/docs/Web/XPath) may give you a list of multiple web elements (or \"frames\"), so the frame number is needed to tell the program which element of that list to save. \n\nThis script doesn't work exactly anymore, because these web pages have changed. That's one major drawback: it's very unstable and sensitive to change. And because of that, we didn't end up implementing this at work. But this same script structure could be used for different purposes in the future.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n##import packages -----------\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom time import sleep\nfrom datetime import date\n\n\n## set up --------\n\n#open driver\ndriver = webdriver.Safari()\n\n#create function to see full page\nS = lambda X: driver.execute_script('return document.body.parentNode.scroll'+X)\n\n#get today's date\ntoday = date.today().strftime(\"%Y-%m-%d\")\n\n#dictionary of screenshots to capture\ndict_urls = [\n    {\n        \"id\": 1, \n        \"url\": 'https://insight.livestories.com/s/v2/1-2-case-counts/c4f65175-2433-47b7-b112-d62cf719af71',\n        \"xpath\": \"//main//iframe\",\n        \"frame_number\": 11,\n        \"filename\": 'weekly-covid-19-test-positivity-rate'\n    },\n        {\n        \"id\": 2, \n        \"url\": 'https://insight.livestories.com/s/v2/1-4-geographic-data/6bb3072d-e622-4b84-9555-7b0ef390b354',\n        \"xpath\": \"//main//iframe\",\n        \"frame_number\": 0,\n        \"filename\": '14-day-testing-rate-per-100000-pop'\n    },\n        {\n        \"id\": 3, \n        \"url\": 'https://insight.livestories.com/s/v2/1-4-geographic-data/6bb3072d-e622-4b84-9555-7b0ef390b354',\n        \"xpath\": \"//main//iframe\",\n        \"frame_number\": 1,\n        \"filename\": '14-day-case-rate-per-100000-pop'\n    },\n        {\n        \"id\": 4, \n        \"url\": 'https://insight-editor.livestories.com/s/v2/1.1-data-dashboard/5d1c9c7a-1eb4-4e9c-82ab-efeaa6258cad',\n        \"xpath\": \"//div[contains(@class, 'css-1bedmrb') and contains(@class, 'erxya8v2')]/div[contains(@class, 'css-rpv578') and contains(@class, 'ezdhjma0')]\",\n        \"frame_number\": 9,\n        \"filename\": 'hrts'\n    }\n    ]\n\n\n## screenshots ------------------------\n\n## loop through dictionary of screenshots\nfor i in range(len(dict_urls)):\n    #go to URL\n    driver.get(url = dict_urls[i]['url'])\n    sleep(3)\n\n    #set window size to full page\n    driver.set_window_size(S('Width'),S('Height')) # May need manual adjustment   \n    sleep(3)\n\n    #find set of frames\n    myframe = driver.find_elements(By.XPATH, dict_urls[i]['xpath'])\n\n    #print needed figure\n    myframe[dict_urls[i]['frame_number']].screenshot(dict_urls[i]['filename'] + \"_\" + today + '.png')\n\n## close driver ----------------------------------\ndriver.quit()\nprint(\"end...\")\n```\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}